pipeline {
    agent any

    triggers {
        pollSCM('H/5 * * * *')
    }

    environment {
        DOCKER_IMAGE = "zeppsolutions1966/spring-boot-docker"
        DOCKER_TAG = "latest"
    }

    stages {
        stage('Setup') {
            steps {
                echo "Launching Pipeline"
                sh 'ls'
            }
        }

        stage('Git Checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/akshayvijaynair/fedi-server'
                sh 'ls'
            }
        }

        stage("Build") {
            steps {
                sh 'chmod +x ./mvnw'
                sh './mvnw compile'
                sh './mvnw test'
                sh './mvnw package -DskipTests'
            }
        }

        stage("Capture") {
            steps {

                archiveArtifacts allowEmptyArchive: true, artifacts: 'target/*.jar', followSymlinks: false


                jacoco()

                // Archive the JUnit test result files
                junit '**/target/surefire-reports/TEST*.xml'
            }
        }

        stage("Docker Build") {
            steps {
                script {

                    sh "docker build -t $DOCKER_IMAGE:$DOCKER_TAG ."
                }
            }
        }

        stage("Docker Push") {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'Docker_Hub_login', url: '']) {

                        sh "docker push $DOCKER_IMAGE:$DOCKER_TAG"
                    }
                }
            }
        }
    }
}
